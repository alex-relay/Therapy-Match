"""use UUIDs on user tables

Revision ID: 7c055266ebf7
Revises: 2449d84445d9
Create Date: 2025-09-10 18:22:23.538156+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "7c055266ebf7"
down_revision: Union[str, Sequence[str], None] = "2449d84445d9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "patients",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        existing_nullable=False,
    )
    op.alter_column(
        "patients",
        "user_id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        nullable=False,
    )
    op.alter_column(
        "personality_test_scores",
        "patient_id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        existing_nullable=True,
    )
    op.alter_column(
        "personality_test_scores",
        "therapist_id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        existing_nullable=True,
    )
    op.alter_column(
        "therapists",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        existing_nullable=False,
        existing_server_default=sa.text("nextval('therapists_id_seq'::regclass)"),
    )
    op.alter_column(
        "therapists",
        "user_id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        nullable=False,
    )
    op.alter_column(
        "users",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.Uuid(),
        existing_nullable=False,
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        existing_server_default=sa.text("nextval('users_id_seq'::regclass)"),
    )
    op.alter_column(
        "therapists",
        "user_id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "therapists",
        "id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        existing_server_default=sa.text("nextval('therapists_id_seq'::regclass)"),
    )
    op.alter_column(
        "personality_test_scores",
        "therapist_id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "personality_test_scores",
        "patient_id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "patients",
        "user_id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "patients",
        "id",
        existing_type=sa.Uuid(),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
