"""initial tables

Revision ID: 0a842ef43b41
Revises:
Create Date: 2025-08-27 17:53:50.300913+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0a842ef43b41"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "personality_test_scores",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("neuroticism", sa.Numeric(precision=5, scale=3), nullable=False),
        sa.Column("openness", sa.Numeric(precision=5, scale=3), nullable=False),
        sa.Column("extraversion", sa.Numeric(precision=5, scale=3), nullable=False),
        sa.Column(
            "conscientiousness", sa.Numeric(precision=5, scale=3), nullable=False
        ),
        sa.Column("agreeableness", sa.Numeric(precision=5, scale=3), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patients",
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_test_id", sa.Integer(), nullable=True),
        sa.Column("therapy_needs", postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ["personality_test_id"],
            ["personality_test_scores.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "therapists",
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_test_id", sa.Integer(), nullable=True),
        sa.Column("specializations", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("therapist_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["personality_test_id"],
            ["personality_test_scores.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "matches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.Integer(), nullable=True),
        sa.Column("therapist_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["therapist_id"],
            ["therapists.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("matches")
    op.drop_table("therapists")
    op.drop_table("patients")
    op.drop_table("personality_test_scores")
    # ### end Alembic commands ###
